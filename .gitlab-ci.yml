stages:
    - test
    - coverage
    - package
    - update_repo
    - docker_image

integration_tests:
    stage: test
    image: daedalusproject/base_daedaluscore:201905140355
    before_script:
        - declare -a -g REQUIRED_VARIABLES
        - REQUIRED_VARIABLES=( 'ENV_TYPE' 'KUBERNETES_URL' 'KUBERNETES_TESTING_USER_NAME' 'KUBERNETES_TESTING_USER_TOKEN' 'KUBERNETES_CLUSTER_CRT')
        - ENV_TYPE="testing"
        - source utils/create_environment.sh
        - create_kube_config
        - delete_env_and_configs
        - create_env_and_configs
        - bash utils/test_redis.sh $REDIS_SERVICE 5 10
    script:
        - perl --version
        - cd t && cpanm --quiet --installdeps --notest . && cd ..
        - perl Makefile.PL
        - make
        - make test
    after_script:
        - declare -a -g REQUIRED_VARIABLES
        - REQUIRED_VARIABLES=( 'ENV_TYPE' 'KUBERNETES_URL' 'KUBERNETES_TESTING_USER_NAME' 'KUBERNETES_TESTING_USER_TOKEN' 'KUBERNETES_CLUSTER_CRT')
        - ENV_TYPE="testing"
        - source utils/create_environment.sh
        - delete_env_and_configs
    tags:
    - kubernetes

cover:
    stage: coverage
    image: daedalusproject/base_daedaluscore:201905140355
    before_script:
        - declare -a -g REQUIRED_VARIABLES
        - REQUIRED_VARIABLES=( 'ENV_TYPE' 'KUBERNETES_URL' 'KUBERNETES_TESTING_USER_NAME' 'KUBERNETES_TESTING_USER_TOKEN' 'KUBERNETES_CLUSTER_CRT')
        - ENV_TYPE="testing"
        - source utils/create_environment.sh
        - create_kube_config
        - delete_env_and_configs
        - create_env_and_configs
        - bash utils/test_redis.sh $REDIS_SERVICE 5 10
    script:
        - perl --version
        - cd t && cpanm --quiet --installdeps --notest . && cd ..
        - perl Makefile.PL
        - make
        - cover -test
        - cover -report codecov
    coverage: /Total\s+.+\s(\d+\.\d+?)$/
    after_script:
        - declare -a -g REQUIRED_VARIABLES
        - REQUIRED_VARIABLES=( 'ENV_TYPE' 'KUBERNETES_URL' 'KUBERNETES_TESTING_USER_NAME' 'KUBERNETES_TESTING_USER_TOKEN' 'KUBERNETES_CLUSTER_CRT')
        - ENV_TYPE="testing"
        - source utils/create_environment.sh
        - delete_env_and_configs
    tags:
    - kubernetes

create_package:
    stage: package
    image: daedalusproject/base_deb_perl_builder:201904201629
    script:
        - DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -uc -b
        - mkdir package
        - mv ../libdaedalus-core-perl*.deb package/
    artifacts:
        paths:
        - package
        expire_in: 5 minutes
    tags:
    - docker_build

upload_package_to_testing_repo:
    stage: update_repo
    image: daedalusproject/base_curl:201904201629
    script:
        - SNAPSHOTDATE=$(date +%G%m%d%k%M%S)
        - PACKAGE=$(ls package)
        - curl -X POST -F file=@package/$PACKAGE http://repo.daedalus-project.io:8000/api/files/daedalus-core || exit 1
        - curl -X POST http://repo.daedalus-project.io:8000/api/repos/daedalus-project-testing/file/daedalus-core || exit 1
        - "curl -X POST -H 'Content-Type: application/json' --data '{\"Name\":\"daedalus-project-testing-'\"$SNAPSHOTDATE\"'\"}' http://repo.daedalus-project.io:8000/api/repos/daedalus-project-testing/snapshots || exit 1"
        - "curl -X PUT -H 'Content-Type: application/json' --data '{\"Snapshots\": [{\"Component\": \"testing\", \"Name\": \"daedalus-project-testing-'\"$SNAPSHOTDATE\"'\"}]}' http://repo.daedalus-project.io:8000/api/publish/:./bionic || exit 1"
    artifacts:
        paths:
        - package
        expire_in: 5 minutes
    dependencies:
    - create_package
    tags:
    - docker_build

create_develop_docker_image:
    stage: docker_image
    image: daedalusproject/base_docker:201905140355
    script:
        - PKG_VERSION=$(head -n 1 debian/changelog  | grep -oh "[[:digit:]]\+\.[[:digit:]]\+-[[:digit:]]\+")
        - IMAGENAME=daedalus_core_develop
        - RELEASEDATE=$(date)
        - docker build --network=host --no-cache -t "${IMAGENAME}" --build-arg CORE_VERSION=$PKG_VERSION -f containers/daedalus_core_develop/Dockerfile .
        - docker login --username "${DOCKERHUBUSER}" --password "${DOCKERHUBPASSWORD}"
        - docker create --name="${IMAGENAME}" -i "${IMAGENAME}"
        - docker tag "${IMAGENAME}" daedalusproject/"${IMAGENAME}":latest
        - docker commit -m "$RELEASEDATE" -a "√Ålvaro Castellano Vela <alvaro.castellano.vela@gmail.com>" "${IMAGENAME}" daedalusproject/"${IMAGENAME}":"${CI_COMMIT_REF_NAME}"
        - docker push daedalusproject/"${IMAGENAME}":latest
        - docker stop "${IMAGENAME}"
        - docker rm "${IMAGENAME}"
        - docker rmi "${IMAGENAME}"
    tags:
    - docker_build
