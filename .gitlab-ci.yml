stages:
    - test
    - coverage
    - package
    - update_repo

integration_tests:
    stage: test
    image: daedalusproject/base_daedaluscore:201904201629
    before_script:
        - declare -a REQUIRED_VARIABLES
        - REQUIRED_VARIABLES=( 'ENV_TYPE' 'KUBERNETES_URL' 'KUBERNETES_TESTING_USER_NAME' 'KUBERNETES_TESTING_USER_TOKEN' 'KUBERNETES_CLUSTER_CRT')
        - ENV_TYPE="testing"
        - source utils/create_environment.sh
        - evalue_env_type
        - create_kube_config
        - delete_env_and_configs
        - create_env_and_configs
        - export GOPATH=/usr/share/gocode
        - wait_for_redis
    script:
        - test_redis
        - go run kubernetes/utils/send.go
        - go run kubernetes/utils/receive.go
        - perl --version
        - cd t && cpanm --quiet --installdeps --notest . && cd ..
        - perl Makefile.PL
        - make
        - make test
    after_script:
        - delete_env_and_configs

cover:
    stage: coverage
    image: daedalusproject/base_daedaluscore:201904201629
    before_script:
        - kubectl config set-cluster default --server=$KUBE_URL --certificate-authority=kubernetes/windmaker.pem
        - kubectl config set-credentials gitlab-daedalus-core-deployer --token=$KUBE_TESTING_USER_TOKEN
        - kubectl config set-context default --cluster=default --user=gitlab-daedalus-core-deployer
        - kubectl config use-context default
        - kubectl -n daedalus-core-testing delete -f kubernetes/daedalus-core-testing/testing-environment.yml --ignore-not-found=true
        - kubectl -n daedalus-core-testing delete configmap redis-config --ignore-not-found=true
        - kubectl -n daedalus-core-testing delete configmap rabbitmq-config --ignore-not-found=true
        - kubectl -n daedalus-core-testing create configmap redis-config --from-file kubernetes/config/redis/redis.conf
        - kubectl -n daedalus-core-testing create configmap rabbitmq-config --from-file kubernetes/config/rabbitmq
        - kubectl -n daedalus-core-testing apply -f kubernetes/daedalus-core-testing/testing-environment.yml
        - export GOPATH=/usr/share/gocode
        - bash utils/test_redis.sh redis-daedalus-core-testing.daedalus-core-testing.svc.cluster.local 5 5
    script:
        - echo "Hello" | redis-cli -h redis-daedalus-core-testing.daedalus-core-testing.svc.cluster.local -x set greeting
        - redis-cli -h redis-daedalus-core-testing.daedalus-core-testing.svc.cluster.local get greeting
        - go run kubernetes/utils/send.go
        - go run kubernetes/utils/receive.go
        - perl --version
        - cd t && cpanm --quiet --installdeps --notest . && cd ..
        - perl Makefile.PL
        - make
        - cover -test
        - cover -report codecov
    coverage: /Total\s+.+\s(\d+\.\d+?)$/
    after_script:
        - kubectl -n daedalus-core-testing delete -f kubernetes/daedalus-core-testing/testing-environment.yml
        - kubectl -n daedalus-core-testing delete configmap redis-config
        - kubectl -n daedalus-core-testing delete configmap rabbitmq-config --ignore-not-found=true

create_package:
    stage: package
    image: daedalusproject/base_deb_perl_builder:201904201629
    script:
        - DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -uc -b
        - mkdir package
        - mv ../libdaedalus-core-perl*.deb package/
    artifacts:
        paths:
        - package
        expire_in: 5 minutes

upload_package_to_repo:
    stage: update_repo
    image: daedalusproject/base_curl:201904201629
    script:
        - SNAPSHOTDATE=$(date +%G%m%d%k%M%S)
        - PACKAGE=$(ls package)
        - curl -X POST -F file=@package/$PACKAGE http://repo.daedalus-project.io:8000/api/files/daedalus-core || exit 1
        - curl -X POST http://repo.daedalus-project.io:8000/api/repos/daedalus-project-testing/file/daedalus-core || exit 1
        - "curl -X POST -H 'Content-Type: application/json' --data '{\"Name\":\"daedalus-project-testing-'\"$SNAPSHOTDATE\"'\"}' http://repo.daedalus-project.io:8000/api/repos/daedalus-project-testing/snapshots || exit 1"
        - "curl -X PUT -H 'Content-Type: application/json' --data '{\"Snapshots\": [{\"Component\": \"testing\", \"Name\": \"daedalus-project-testing-'\"$SNAPSHOTDATE\"'\"}]}' http://repo.daedalus-project.io:8000/api/publish/:./bionic || exit 1"
    artifacts:
        paths:
        - package
        expire_in: 5 minutes
    dependencies:
    - create_package
